name: build
on: [push, pull_request, workflow_dispatch]
jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'check'
            python: '3.13'
            tox_env: 'check'
            os: 'ubuntu-latest'
          - name: 'docs'
            python: '3.13'
            tox_env: 'docs'
            os: 'ubuntu-latest'
          - name: 'py311 (ubuntu)'
            python: '3.11'
            python_arch: 'x64'
            tox_env: 'py311'
            os: 'ubuntu-latest'
          - name: 'py312 (ubuntu)'
            python: '3.12'
            python_arch: 'x64'
            tox_env: 'py312'
            os: 'ubuntu-latest'
          - name: 'py313 (ubuntu)'
            python: '3.13'
            python_arch: 'x64'
            tox_env: 'py313'
            os: 'ubuntu-latest'
          - name: 'py313 (windows)'
            python: '3.13'
            python_arch: 'x64'
            tox_env: 'py313'
            os: 'windows-latest'
          - name: 'py313 (macos)'
            python: '3.13'
            python_arch: 'arm64'
            tox_env: 'py313'
            os: 'macos-latest'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.python_arch }}
    - name: install dependencies
      run: |
        python -mpip install --progress-bar=off -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
    - name: test
      run: >
        tox -e ${{ matrix.tox_env }} -v
  test-cov:
    name: 'test_coverage'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'
      - name: install dependencies
        run: |
          python -mpip install --progress-bar=off -r ci/requirements.txt
          virtualenv --version
          pip --version
          tox --version
          pip list --format=freeze
      - name: test
        run: >
           tox -e py313 -v
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            dist
            !dist/**/*.md
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: output/test/code-coverage.html
      - name: Creating coverage folder
        run: |
          mkdir -p coverage
      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@1788babcb24544eb5bbb6e0d374df5d1e54e670f # v2
        with:
          output: coverage/coverage.svg
      - name: Publish coverage report to coverage-badge branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: coverage-badge
          folder: coverage
  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - uses: codecov/codecov-action@v5
      with:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
